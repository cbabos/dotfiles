#!/usr/bin/php
<?php
/**
 * We want to generate thumbnails from the ./images folder,
 * to the ./images/thumbnail. So we exclude the target directory, and overwrite
 * everything if there is a ./images/thumbnail.  
 */

$targetDir = './images/thumbnail';
$targetResolution = '256x256';

/**
 * Scans recursively for files and creates new file name from path
 *
 * @param string $folder Input folder (Default: current working dir/images)
 * @return array File array indexed by them paths
 */
function getFilesFromFolder($folder = "./images") {
    $files = array();

    $contents = scandir($folder);
    foreach ($contents as $entry) {
        if (in_array($entry, array("..",".","thumbnail"))) continue;

        $path = $folder . "/" . $entry;

        if (is_dir($path)) {
            $files = $files + getFilesFromFolder($path);
        } else {
            $files[$path] = str_replace('/', '_',
                            str_replace('./images/', '', $path)); 
        }
    }

    return $files;
}

$files = getFilesFromFolder();
$finfo = finfo_open(FILEINFO_MIME_TYPE);

if (is_dir($targetDir) === false) {
    mkdir($targetDir);
}

foreach ($files as $key => $file) {
    $targetFile = $targetDir . '/' . $file;
    $mime = finfo_file($finfo, $key);

    copy($key, $targetFile);

    switch ($mime) {
        case 'image/jpeg': 
        case 'image/gif': 
        case 'image/png': 
            exec("convert $targetFile -resize $targetResolution^ -gravity center -extent $targetResolution $targetFile");
        break;
    }
}
